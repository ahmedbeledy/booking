@use "../abstracts/variables" as *;

.form {
  &.custom-rows {
    &.v1 {
      & > .row {
        margin-bottom: var(--s-Z1);
      }
    }
  }

  .form-header {
    &.v1 {
      color: $cgreen-A700;
      & > * {
        padding-inline-start: 0rem;
      }
      h2 {
        font-weight: 800;
      }
      p {
        font-weight: 320;
        a {
          color: inherit;
          font-weight: 600;
          text-decoration: underline;
          cursor: pointer;
        }
      }
    }
  }

  .form-link {
    display: block;
    color: inherit;
    max-width: max-content;
    &.v1 {
      color: $cgreen-A100;
      font-weight: 300;
    }
  }

  .label {
    display: block;
    font-size: 1.1rem;
    font-weight: 500;
  }
  .control {
    display: grid;
    grid-template-columns: max-content auto max-content;
    background-color: $graySP-A100;
    padding: $control-padding;
    border-radius: 0.25rem;
    // overflow: hidden;
    position: relative;

    &:hover {
      .error {
        opacity: 0;
        pointer-events: none;
        transition-delay: 0.3s;
      }
    }

    & > * {
      grid-row: 1/2;
    }

    :is(.prefix, .suffix) {
      display: grid;
      place-items: center;
      width: max-content;
    }

    .prefix {
      grid-column: 1/2;
      padding-inline-end: $control-padding;
    }

    .suffix {
      grid-column: 3/4;
    }

    &:has(.field:focus) {
      outline: 2px solid $cgreen-A700;
      &:has(.error, .ng-invalid:not(.ng-untouched)) {
        outline: 2px solid $cred-Z000;
      }
      .error {
        opacity: 0;
        pointer-events: none;
        transition-delay: 0.25s;
      }
    }

    //&:has(select:not(.defPad), textarea)
    &:has(select, textarea) {
      padding: 0;
      .suffix {
        padding-inline-end: $control-padding;
      }
      .prefix {
        padding-inline-start: $control-padding;
      }
      .error {
        top: 80%;
      }
    }

    &:has(.suffix) {
      .field {
        &:is(select, textarea) {
          padding-inline-end: 0;
        }
      }
    }

    &:has(.prefix) {
      .field {
        &:is(select, textarea) {
          padding-inline-start: 0;
        }
      }
    }

    .field {
      border: none;
      background-color: transparent;
      overflow: hidden;
      text-overflow: ellipsis;
      grid-column: 2/3;

      &:is(select, textarea) {
        padding-block: calc($control-padding + var(--s-Z8));
        padding-inline-start: $control-padding;
        padding-inline-end: 0rem;
        margin-inline-end: $control-padding;
      }

      /*
      &:is(select:not(.defPad), textarea) {
        padding: $control-padding;
      }
      */

      &::placeholder {
        color: black;
      }

      &:is(:focus) {
        border: none;
        outline: none;
      }
    }

    &:has(.error, .ng-invalid:not(.ng-untouched)) {
      outline: 2px solid $cred-Z000;
    }

    .error {
      position: absolute;
      top: 100%;
      right: 5%;
      left: unset;
      transform: translateY(5%);
      z-index: 1;
      font-size: var(--s-Z2) !important;
      color: $cred-Z000;
      background-color: hsl(0, 100%, 100%);
      box-shadow: 0rem 0.1rem 0.25rem hsla(0, 50%, 10%, 0.1);
      padding-inline: var(--s-Z7);
      opacity: 0.95;
      transition: opacity 0.2s;
      * {
        font-size: var(--s-Z2) !important;
        margin: 0rem !important;
        padding: 0rem !important;
      }
    }
  }
}
[dir=rtl] {
  .form {
    .control {
      .error {
        right: unset;
        left: 5%;
      }
    }
  }
}
